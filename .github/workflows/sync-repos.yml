name: Sync Forked Repositories

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  list-repos:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      repository-projects: write
      pull-requests: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install jq gh parallel -y
  
    - name: Login to GitHub
      run: |
        echo "${{ secrets.WRITE_TOKEN }}" | gh auth login --with-token

    - name: List all repositories in the organization and sync them in parallel
      env:
        ORG_NAME: "vulnerable-code"
      run: |
        # List all forks in the organization
        forks=$(gh api orgs/$ORG_NAME/repos --jq '.[] | select(.fork==true) | .full_name' --paginate)
        
        # Function to sync a repository and capture failures
        sync_repo() {
          fork=$1
          echo "Updating $fork"
          if ! gh repo sync $fork --force; then
            echo "$fork failed" >> failed_repos.log
            return 1
          fi
        }

        export -f sync_repo

        # Run sync for each fork in parallel and ensure the job fails if any fail
        echo "$forks" | parallel -j 5 sync_repo {}

        # Check if any sync failed
        if [ -f failed_repos.log ]; then
          echo "Some repositories failed to sync:"
          cat failed_repos.log
          exit 1
        fi

    - name: Save datetime of the last run
      run: date '+%Y-%m-%d %H:%M:%S' > sync.log
    
    - name: Commit and push sync log
      run: |
        DATE=$(date '+%Y-%m-%d %H:%M:%S')
        echo $DATE > sync.log
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"
        git add sync.log
        git commit -m "Update sync log with the latest run date and time: $DATE"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.WRITE_TOKEN }}
